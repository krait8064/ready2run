software engineering life cycle;team managing;communication;Java;cloud platform;containerization;ci/cd pipelines;financial technology;data platforms;ai/ml;diversity. equity. and inclusion;large scale;distributed system;
software engineering life cycle;standard procedures;communication;test;Java;deployments;relational-sql;no-sql;open-source Java Libraries;testing framework;large scale
software engineering life cycle;Agile;scrum;real-time;sprint;high-traffic;low latency;global traffic;multi-region fail-over;communication;real-time streaming;AWS;Lambda;Fargate;SQS;DynamoDB;Auroratest;Java;python;go
scalable;full-stack;Java;SpringBoot;microservices;React/Angular;iOS/Android;SQL;NoSQL;AI/ML;Databricks;;AWSAIStack;agile
OpenAPI;microservices;JDK17;SpringBoot;Camel4;cross-functional;bottlenecks;security;auto-test;Html;Css
 CI/CD;GitLab;Jenkins;CircleCI;Bitbucket;cloud deployment; AWS cloud constructs;Terraform;Docker;Kubernetes;Kafka;Golang;Java;Python;SDLC;system design;SRE principles;diagnosis;prevention;performance;availability;communication;Prometheus;Grafana;ML;AI;TCP;UDP;ICMP;ARP;DNS;TLS;HTTP;SSH
Java;GoLang;Strong software engineering fundamentals;CI/CD;pipelines;monitor;GitLab;communication;Linux;Docker;etc;Kubernetes;Terraform;AWS;networking;TCP;UDP;ICMP;ARP;DNS;TLS;HTTP;SSH;AI;ML;
front-end;microservices;Azure cloud;Agile;container;Docker;Kubernetes;Python;Node.js;UI/UX design principles;finance;asset management;Agile;multithreading;C#;React JS; .NET;Azure;SQL;RESTful;GitHub;GitLab;CI/CD
AI;ML;LLMs;agent frameworks;data analytics;name screening;sanction checking;anti-money laundering;AI-driven;scalable;high available;low-latency;distributedcloud ;GCP/AWS;reliability;data governance;data pipelines;data quality monitor;real-time streaming;communication;Java;Python;Spring;concurrency;data model;financial crime;risk management;compliance;fintech domains;LLM agent;Retrieval-Augmented Generation (RAG) pipelines;langchain;langfuse;MCP;predictive risk analytics;fraud detection;operational automation;real-time data streaming;Kafka;Flink;Spark;BigQuery;Airflow;ElasticSearch;agent and automation evaluation frameworks;
Cloud Infrastructure;distributed;CI/CD;monitor; data engineer;SQL;Redis;network;container; Istio;Crossplane;ArgoCD/Rollout/Workflow;monitor;on-call;AI;Kubernetes;Service Mesh (Istio);Crossplane;GitOps;cloud platforms;scalable;fault-tolerant;Containerization;Crossplane;Pulumi;Terraform;maintainable;Go;Python;Communication;automate infrastructure workflows;Istio;traffic management;observability;security;microservices;ArgoCD;Flux;GCP;AWS;Azure;CNCF 
CI-CD;Java/J2EE;Spark;Kafka;Flume;ActiveMQ;Hadoop;HDFS; HBase; Hive; ORC;Parquet;Maven;Restful;Junit;Jira
Java;J2EE;Spring;Struts;container;SQL;DB2;communication;AI;UNIX;shell;financial;Agile;Scrum
Java;JDK 17+;sales;trading;quant;pre-trade;Git;Bitbucket;JIRA;TeamCity;Maven;Gradle;Jenkins;Artifactory;message;Solace;Tib RV/Faster Than Light;Aeron;Redis;Hazelcast;fixed income products;communication;Low latency;low or zero GC;KDB/Q
financial;large-scale;availability;comunication;Go;Java;MySQL;Nginx;Redis;Kafka.RPC
reliability;scalability;Java ;Golang;Java;Python;Data Structures;Algorithms;Networking;Operating Systems;MySQL;Redis;Kafka;container;Microservice;Http/TCP;xml;json;Protocol Buffer;Distributed;concurrency;cache;Fintech 
Java;AI-augmented;Agentic AI;reliability;Azure Cloud;Azure Data Factory;SCRUM;UT;PostgreSQL
cloud security;Microsoft Azure;Microsoft 365;Entra ID;Microsoft Defender suite;Microsoft Purview;Microsoft cloud security;Azure Platform Security ;Secure Landing Zone.;Azure Key Vault; Azure Security Center; Azure Policy.;Azure Networking;Identity management;Microsoft Entra ID;Conditional Access;PIM; Endpoint management ;Microsoft Intune;
well-documented;performing;iterative;Code review;ut;Digital Twin;AI/ML; AR/VR;Python;C#;Java